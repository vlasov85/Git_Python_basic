__author__ = 'Власов А.В.'
import math
import random

# EASY

# Задача-1:
# Дан список фруктов.
# Напишите программу, выводящую фрукты в виде нумерованного списка,
# выровненного по правой стороне.

# Пример:
# Дано: ["яблоко", "банан", "киви", "арбуз"]
# Вывод:
# 1. яблоко
# 2.  банан
# 3.   киви
# 4.  арбуз

# Подсказка: воспользоваться методом .format())

print('EASY. Задача 1.')

fruits = ["яблоко", "банан", "киви", "арбуз"]

i = 0
while i < len(fruits):
    print(i+1,'. {:>6}'.format(fruits[i]))
    i += 1

# Задача-2:
# Даны два произвольные списка.
# Удалите из первого списка элементы, присутствующие во втором списке.

print('EASY. Задача 2.')

letters = ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0"]

dlina = int(input("введите длину списков = "))


list1 = []
list2 = []
listRem = []

i = 0
while i < dlina:
    list1.append(random.choice(letters))
    list2.append(random.choice(letters))
    i += 1
print('список list1 =', list1)
print('список list2 =', list2)

for i in list2: #пытался записать без if сразу list1.remove(list[i]), но не сработало - вопрос почему?
    if i in list1:
        listRem.append(i)
        list1.remove(i)
print('сформирован новый список list1 =', list1)
print('удалены повторяющиеся элементы', listRem)

# Задача-3:
# Дан произвольный список из целых чисел.
# Получите НОВЫЙ список из элементов исходного, выполнив следующие условия:
# если элемент кратен двум, то разделить его на 4, если не кратен, то умножить на два.

print('EASY. Задача 3.')

dlina = int(input("введите длину списка = "))
elem = int(input("введите интервал чисел в списке от 0 до = "))

list1 = []
list2 = []

i = 0
while i < dlina:
    list1.append(random.randint(0, elem))
    i += 1
print('список list1 =', list1)

i = 0
while i < dlina:
    if list1[i] % 2 == 0:
        list2.append(list1[i] / 4)
    else:
        list2.append(list1[i] * 2)
    i += 1
print("новый список list2 =", list2)

# NORMAL

# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]

print('NORMAL. Задача 1.')

dlina = int(input("введите длину списка = "))
elem = int(input("введите интервал чисел в списке от 0 до = "))

list1 = []
list2 = []

i = 0
while i < dlina:
    list1.append(random.randint(0, elem))
    i += 1
print('список list1 =', list1)

for number in list1:
    if number > 0 and math.sqrt(number) % 1 == 0:
        list2.append(int(math.sqrt(number)))

print("новый список list2 =", list2)

# Задача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.
# Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года.
# Склонением пренебречь (2000 года, 2010 года)

print('NORMAL. Задача 2.')

data1 = input("введите дату в формате dd.mm.yyyy = ")
data2 = data1.split('.')

day = {'01': 'первое', '02': 'второе', '03': 'третье', '04': 'четвертое', '5': 'пятое',
       '6': 'шестое', '7': 'седьмое','8': 'восьмое', '9': 'девятое', '10': 'десятое',
       '11': 'одинадцатое', '12': 'двенадцатое', '13': 'тринадцатое', '14': 'четырнадцатое', '15': 'пятнадцатое',
       '16': 'шестнадцатое', '17': 'семнадцатое', '18': 'восемнадцатое', '19': 'девятнадцатое', '20': 'двадцатое',
       '21': 'двадцать первое', '22': ' двадцать второе', '23': 'двадцать третье', '24': 'двадцать четвертое',
       '25': 'двадцать пятое', '26': 'двадцать шестое', '27': 'двадцать седьмое', '28': 'двадцать восьмое',
       '29': 'двадцать девятое', '30': 'тридцатое', '31': 'тридцать первое'}

month = {'01': 'январь', '02': 'февраль', '03': 'март', '04': 'апрель', '05': 'май', '06': 'июнь',
         '07': 'июль', '08': 'август', '09': 'сентябрь', '10': 'октябрь', '11': 'ноябрь', '12': 'декабрь'}

for key in day:
    if data2[0] == key:
        data2[0] = day[key]

for key in month:
    if data2[1] == key:
        data2[1] = month[key]

print(data2[0], data2[1], data2[2], 'года')

# Задача-3: Напишите алгоритм, заполняющий список произвольными целыми числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random

print('NORMAL. Задача 3.')

dlina = int(input("введите длину списка = "))

list1 = []

i = 0
while i < dlina:
    list1.append(random.randint(-100, 100))
    i += 1
print('список list1 =', list1)

# Задача-4: Дан список, заполненный произвольными целыми числами.
# Получите новый список, элементами которого будут:
# а) неповторяющиеся элементы исходного списка:
# например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]
# б) элементы исходного списка, которые не имеют повторений:
# например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]

print('NORMAL. Задача 4.')

dlina = int(input("введите длину списка = "))
elem = int(input("введите интервал чисел в списке от 0 до = "))

list1 = []
list3 = []

i = 0
while i < dlina:
    list1.append(random.randint(0, elem))
    i += 1
print('список list1 =', list1)

list2 = set(list1)

for number in list1:
    if list1.count(number) == 1:
        list3.append(number)

print("новый список list2 =", list2)
print("новый список list3 =", list3)

# HARD

# Задание-1: уравнение прямой вида y = kx + b задано в виде строки.
# Определить координату y точки с заданной координатой x.
# equation = 'y = -12x + 11111140.2121'
# x = 2.5
# вычислите и выведите y

print('HARD. Задача 1.')
x = 2.5
ur1 = 'y = -12x + 11111140.2121'

ur2 = ur1.split(' ')
print('y = ', int(ur2[2][:-1]) * x + float(ur2[4]))

# Задание-2: Дата задана в виде строки формата 'dd.mm.yyyy'.
# Проверить, корректно ли введена дата.
# Условия корректности:
# 1. День должен приводиться к целому числу в диапазоне от 1 до 30(31)
#  (в зависимости от месяца, февраль не учитываем)
# 2. Месяц должен приводиться к целому числу в диапазоне от 1 до 12
# 3. Год должен приводиться к целому положительному числу в диапазоне от 1 до 9999
# 4. Длина исходной строки для частей должна быть в соответствии с форматом
#  (т.е. 2 символа для дня, 2 - для месяца, 4 - для года)

# Пример корректной даты
# date = '01.11.1985'

# Примеры некорректных дат
# date = '01.22.1001'
# date = '1.12.1001'
# date = '-2.10.3001'

print('HARD. Задача 2.')

data1 = input("введите дату в формате dd.mm.yyyy = ")
data2 = data1.split('.')

if len(data2[0]) != 2 or len(data2[1]) != 2 or len(data2[2]) != 4 or \
        int(data2[0]) <= 0 or int(data2[0]) > 31 or \
        int(data2[1]) <= 0 or int(data2[1]) > 12 or \
        int(data2[2]) <= 0 or int(data2[1]) > 9999:
        print('введена некорректная дата')
else:
    print('введена корректная дата')

# Задание-3: "Перевёрнутая башня" (Задача олимпиадного уровня)
#
# Вавилонцы решили построить удивительную башню —
# расширяющуюся к верху и содержащую бесконечное число этажей и комнат.
# Она устроена следующим образом — на первом этаже одна комната,
# затем идет два этажа, на каждом из которых по две комнаты,
# затем идёт три этажа, на каждом из которых по три комнаты и так далее:
#         ...
#     12  13  14
#     9   10  11
#     6   7   8
#       4   5
#       2   3
#         1
#
# Эту башню решили оборудовать лифтом --- и вот задача:
# нужно научиться по номеру комнаты определять,
# на каком этаже она находится и какая она по счету слева на этом этаже.
#
# Входные данные: В первой строчке задан номер комнаты N, 1 ≤ N ≤ 2 000 000 000.
#
# Выходные данные:  Два целых числа — номер этажа и порядковый номер слева на этаже.
#
# Пример:
# Вход: 13
# Выход: 6 2
#
# Вход: 11
# Выход: 5 3

print('HARD. Задача 3. не хватило времени - решения пока нет')


